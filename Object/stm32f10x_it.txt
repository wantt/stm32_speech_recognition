; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Object\stm32f10x_it.o --depend=.\Object\stm32f10x_it.d --feedback=.\Object\stm32-speech-recognition.fed --cpu=Cortex-M3 --apcs=interwork -O0 -Otime -I.\Src\APP -I.\Src\BSP -I.\Src\GUI -I.\Src\CM3_SYS -I.\Src\FATFS -I.\Src\StdPeriph_Driver -I.\Src\StdPeriph_Driver\inc -I.\Src\Speech_Recog -IE:\SoftWare\KEIL\Keil4\path\ARM\INC -IE:\SoftWare\KEIL\Keil4\path\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\Object\stm32f10x_it.crf Src\StdPeriph_Driver\stm32f10x_it.c]
                          THUMB

                          AREA ||i.ADC1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  ADC1_2_IRQHandler PROC
;;;348    *******************************************************************************/
;;;349    void ADC1_2_IRQHandler(void)
000000  4770              BX       lr
;;;350    {
;;;351    }
;;;352    
                          ENDP


                          AREA ||i.ADC3_IRQHandler||, CODE, READONLY, ALIGN=1

                  ADC3_IRQHandler PROC
;;;675    *******************************************************************************/
;;;676    void ADC3_IRQHandler(void)
000000  4770              BX       lr
;;;677    {
;;;678    }
;;;679    
                          ENDP


                          AREA ||i.BusFaultException||, CODE, READONLY, ALIGN=1

                  BusFaultException PROC
;;;75     *******************************************************************************/
;;;76     void BusFaultException(void)
000000  bf00              NOP      
                  |L3.2|
;;;77     {
;;;78       /* Go to infinite loop when Bus Fault exception occurs */
;;;79       while (1)
000002  e7fe              B        |L3.2|
;;;80       {
;;;81       }
;;;82     }
;;;83     
                          ENDP


                          AREA ||i.CAN_RX1_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_RX1_IRQHandler PROC
;;;383    *******************************************************************************/
;;;384    void CAN_RX1_IRQHandler(void)
000000  4770              BX       lr
;;;385    {
;;;386    }
;;;387    
                          ENDP


                          AREA ||i.CAN_SCE_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_SCE_IRQHandler PROC
;;;394    *******************************************************************************/
;;;395    void CAN_SCE_IRQHandler(void)
000000  4770              BX       lr
;;;396    {
;;;397    }
;;;398    
                          ENDP


                          AREA ||i.DMA1_Channel1_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel1_IRQHandler PROC
;;;271    *******************************************************************************/
;;;272    void DMA1_Channel1_IRQHandler(void)
000000  4770              BX       lr
;;;273    {
;;;274    }
;;;275    
                          ENDP


                          AREA ||i.DMA1_Channel2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel2_IRQHandler PROC
;;;282    *******************************************************************************/
;;;283    void DMA1_Channel2_IRQHandler(void)
000000  4770              BX       lr
;;;284    {
;;;285    }
;;;286    
                          ENDP


                          AREA ||i.DMA1_Channel3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel3_IRQHandler PROC
;;;293    *******************************************************************************/
;;;294    void DMA1_Channel3_IRQHandler(void)
000000  4770              BX       lr
;;;295    {
;;;296    }
;;;297    
                          ENDP


                          AREA ||i.DMA1_Channel4_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel4_IRQHandler PROC
;;;304    *******************************************************************************/
;;;305    void DMA1_Channel4_IRQHandler(void)
000000  4770              BX       lr
;;;306    {
;;;307    }
;;;308    
                          ENDP


                          AREA ||i.DMA1_Channel5_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel5_IRQHandler PROC
;;;315    *******************************************************************************/
;;;316    void DMA1_Channel5_IRQHandler(void)
000000  4770              BX       lr
;;;317    {
;;;318    }
;;;319    
                          ENDP


                          AREA ||i.DMA1_Channel6_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel6_IRQHandler PROC
;;;326    *******************************************************************************/
;;;327    void DMA1_Channel6_IRQHandler(void)
000000  4770              BX       lr
;;;328    {
;;;329    }
;;;330    
                          ENDP


                          AREA ||i.DMA1_Channel7_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_Channel7_IRQHandler PROC
;;;337    *******************************************************************************/
;;;338    void DMA1_Channel7_IRQHandler(void)
000000  4770              BX       lr
;;;339    {
;;;340    }
;;;341    
                          ENDP


                          AREA ||i.DMA2_Channel1_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_Channel1_IRQHandler PROC
;;;788    *******************************************************************************/
;;;789    void DMA2_Channel1_IRQHandler(void)
000000  4770              BX       lr
;;;790    {
;;;791    }
;;;792    
                          ENDP


                          AREA ||i.DMA2_Channel2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_Channel2_IRQHandler PROC
;;;799    *******************************************************************************/
;;;800    void DMA2_Channel2_IRQHandler(void)
000000  4770              BX       lr
;;;801    {
;;;802    }
;;;803    
                          ENDP


                          AREA ||i.DMA2_Channel3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_Channel3_IRQHandler PROC
;;;810    *******************************************************************************/
;;;811    void DMA2_Channel3_IRQHandler(void)
000000  4770              BX       lr
;;;812    {
;;;813    }
;;;814    
                          ENDP


                          AREA ||i.DMA2_Channel4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_Channel4_5_IRQHandler PROC
;;;822    *******************************************************************************/
;;;823    void DMA2_Channel4_5_IRQHandler(void)
000000  4770              BX       lr
;;;824    {
;;;825    }
;;;826    
                          ENDP


                          AREA ||i.DebugMonitor||, CODE, READONLY, ALIGN=1

                  DebugMonitor PROC
;;;105    *******************************************************************************/
;;;106    void DebugMonitor(void)
000000  4770              BX       lr
;;;107    {
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI0_IRQHandler PROC
;;;215    *******************************************************************************/
;;;216    void EXTI0_IRQHandler(void)
000000  4770              BX       lr
;;;217    {
;;;218    }
;;;219    
                          ENDP


                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI15_10_IRQHandler PROC
;;;596    *******************************************************************************/
;;;597    void EXTI15_10_IRQHandler(void)
000000  4770              BX       lr
;;;598    {
;;;599    }
;;;600    
                          ENDP


                          AREA ||i.EXTI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI1_IRQHandler PROC
;;;226    *******************************************************************************/
;;;227    void EXTI1_IRQHandler(void)
000000  4770              BX       lr
;;;228    {
;;;229    }
;;;230    
                          ENDP


                          AREA ||i.EXTI2_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI2_IRQHandler PROC
;;;237    *******************************************************************************/
;;;238    void EXTI2_IRQHandler(void)
000000  4770              BX       lr
;;;239    {
;;;240    
;;;241    }
;;;242    
                          ENDP


                          AREA ||i.EXTI3_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI3_IRQHandler PROC
;;;249    *******************************************************************************/
;;;250    void EXTI3_IRQHandler(void)
000000  4770              BX       lr
;;;251    {
;;;252    }
;;;253    
                          ENDP


                          AREA ||i.EXTI4_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI4_IRQHandler PROC
;;;260    *******************************************************************************/
;;;261    void EXTI4_IRQHandler(void)
000000  4770              BX       lr
;;;262    {
;;;263    }
;;;264    
                          ENDP


                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI9_5_IRQHandler PROC
;;;405    *******************************************************************************/
;;;406    void EXTI9_5_IRQHandler(void)
000000  4770              BX       lr
;;;407    {
;;;408    }
;;;409    
                          ENDP


                          AREA ||i.FLASH_IRQHandler||, CODE, READONLY, ALIGN=1

                  FLASH_IRQHandler PROC
;;;193    *******************************************************************************/
;;;194    void FLASH_IRQHandler(void)
000000  4770              BX       lr
;;;195    {
;;;196    }
;;;197    
                          ENDP


                          AREA ||i.FSMC_IRQHandler||, CODE, READONLY, ALIGN=1

                  FSMC_IRQHandler PROC
;;;686    *******************************************************************************/
;;;687    void FSMC_IRQHandler(void)
000000  4770              BX       lr
;;;688    {
;;;689    }
;;;690    
                          ENDP


                          AREA ||i.HardFaultException||, CODE, READONLY, ALIGN=1

                  HardFaultException PROC
;;;45     *******************************************************************************/
;;;46     void HardFaultException(void)
000000  bf00              NOP      
                  |L27.2|
;;;47     {
;;;48       /* Go to infinite loop when Hard Fault exception occurs */
;;;49       while (1)
000002  e7fe              B        |L27.2|
;;;50       {
;;;51       }
;;;52     }
;;;53     
                          ENDP


                          AREA ||i.I2C1_ER_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C1_ER_IRQHandler PROC
;;;506    *******************************************************************************/
;;;507    void I2C1_ER_IRQHandler(void)
000000  4770              BX       lr
;;;508    {
;;;509    }
;;;510    
                          ENDP


                          AREA ||i.I2C1_EV_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C1_EV_IRQHandler PROC
;;;495    *******************************************************************************/
;;;496    void I2C1_EV_IRQHandler(void)
000000  4770              BX       lr
;;;497    {
;;;498    }
;;;499    
                          ENDP


                          AREA ||i.I2C2_ER_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C2_ER_IRQHandler PROC
;;;528    *******************************************************************************/
;;;529    void I2C2_ER_IRQHandler(void)
000000  4770              BX       lr
;;;530    {
;;;531    }
;;;532    
                          ENDP


                          AREA ||i.I2C2_EV_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C2_EV_IRQHandler PROC
;;;517    *******************************************************************************/
;;;518    void I2C2_EV_IRQHandler(void)
000000  4770              BX       lr
;;;519    {
;;;520    }
;;;521    
                          ENDP


                          AREA ||i.MemManageException||, CODE, READONLY, ALIGN=1

                  MemManageException PROC
;;;60     *******************************************************************************/
;;;61     void MemManageException(void)
000000  bf00              NOP      
                  |L32.2|
;;;62     {
;;;63       /* Go to infinite loop when Memory Manage exception occurs */
;;;64       while (1)
000002  e7fe              B        |L32.2|
;;;65       {
;;;66       }
;;;67     }
;;;68     
                          ENDP


                          AREA ||i.NMIException||, CODE, READONLY, ALIGN=1

                  NMIException PROC
;;;34     *******************************************************************************/
;;;35     void NMIException(void)
000000  4770              BX       lr
;;;36     {
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.PVD_IRQHandler||, CODE, READONLY, ALIGN=1

                  PVD_IRQHandler PROC
;;;160    *******************************************************************************/
;;;161    void PVD_IRQHandler(void)
000000  4770              BX       lr
;;;162    {
;;;163    }
;;;164    
                          ENDP


                          AREA ||i.PendSVC||, CODE, READONLY, ALIGN=1

                  PendSVC PROC
;;;127    *******************************************************************************/
;;;128    void PendSVC(void)
000000  4770              BX       lr
;;;129    {
;;;130    }
;;;131    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;204    *******************************************************************************/
;;;205    void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;206    {
;;;207    }
;;;208    
                          ENDP


                          AREA ||i.RTCAlarm_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTCAlarm_IRQHandler PROC
;;;607    *******************************************************************************/
;;;608    void RTCAlarm_IRQHandler(void)
000000  4770              BX       lr
;;;609    {
;;;610    }
;;;611    
                          ENDP


                          AREA ||i.RTC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTC_IRQHandler PROC
;;;182    *******************************************************************************/
;;;183    void RTC_IRQHandler(void)
000000  4770              BX       lr
;;;184    {
;;;185    }
;;;186    
                          ENDP


                          AREA ||i.SDIO_IRQHandler||, CODE, READONLY, ALIGN=1

                  SDIO_IRQHandler PROC
;;;698    
;;;699    void SDIO_IRQHandler(void)
000000  4770              BX       lr
;;;700    {
;;;701       	/*										  
;;;702    #if (CPU_CFG_CRITICAL_METHOD == CPU_CRITICAL_METHOD_STATUS_LOCAL)
;;;703        CPU_SR         cpu_sr;
;;;704    #endif	
;;;705    	
;;;706    	OS_ENTER_CRITICAL();                           Tell uC/OS-II that we are starting an ISR          
;;;707        OSIntNesting++;
;;;708        OS_EXIT_CRITICAL();																			*/	  
;;;709    	
;;;710    	/* Process All SDIO Interrupt Sources 
;;;711    	SD_ProcessIRQSrc();*/
;;;712    												  
;;;713        /*OSIntExit();                                  Tell uC/OS-II that we are leaving the ISR          */
;;;714    }
;;;715    
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;539    *******************************************************************************/
;;;540    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;541    {
;;;542    }
;;;543    
                          ENDP


                          AREA ||i.SPI2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI2_IRQHandler PROC
;;;550    *******************************************************************************/
;;;551    void SPI2_IRQHandler(void)
000000  4770              BX       lr
;;;552    {
;;;553    }
;;;554    
                          ENDP


                          AREA ||i.SPI3_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI3_IRQHandler PROC
;;;733    *******************************************************************************/
;;;734    void SPI3_IRQHandler(void)
000000  4770              BX       lr
;;;735    {
;;;736    }
;;;737    
                          ENDP


                          AREA ||i.SVCHandler||, CODE, READONLY, ALIGN=1

                  SVCHandler PROC
;;;116    *******************************************************************************/
;;;117    void SVCHandler(void)
000000  4770              BX       lr
;;;118    {
;;;119    }
;;;120    
                          ENDP


                          AREA ||i.SysTickHandler||, CODE, READONLY, ALIGN=1

                  SysTickHandler PROC
;;;138    *******************************************************************************/
;;;139    void SysTickHandler(void)
000000  4770              BX       lr
;;;140    {
;;;141    }
;;;142    
                          ENDP


                          AREA ||i.TAMPER_IRQHandler||, CODE, READONLY, ALIGN=1

                  TAMPER_IRQHandler PROC
;;;171    *******************************************************************************/
;;;172    void TAMPER_IRQHandler(void)
000000  4770              BX       lr
;;;173    {
;;;174    }
;;;175    
                          ENDP


                          AREA ||i.TIM1_BRK_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_BRK_IRQHandler PROC
;;;416    *******************************************************************************/
;;;417    void TIM1_BRK_IRQHandler(void)
000000  4770              BX       lr
;;;418    {
;;;419    }
;;;420    
                          ENDP


                          AREA ||i.TIM1_CC_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_CC_IRQHandler PROC
;;;451    *******************************************************************************/
;;;452    void TIM1_CC_IRQHandler(void)
000000  4770              BX       lr
;;;453    {
;;;454    }
;;;455    
                          ENDP


                          AREA ||i.TIM1_TRG_COM_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_TRG_COM_IRQHandler PROC
;;;440    *******************************************************************************/
;;;441    void TIM1_TRG_COM_IRQHandler(void)
000000  4770              BX       lr
;;;442    {
;;;443    }
;;;444    
                          ENDP


                          AREA ||i.TIM1_UP_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_UP_IRQHandler PROC
;;;428    *******************************************************************************/
;;;429    void TIM1_UP_IRQHandler(void)
000000  4770              BX       lr
;;;430    {
;;;431    }
;;;432    
                          ENDP


                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM2_IRQHandler PROC
;;;462    *******************************************************************************/
;;;463    void TIM2_IRQHandler(void)
000000  4770              BX       lr
;;;464    {
;;;465    }
;;;466    
                          ENDP


                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM3_IRQHandler PROC
;;;473    *******************************************************************************/
;;;474    void TIM3_IRQHandler(void)
000000  4770              BX       lr
;;;475    {
;;;476    }
;;;477    
                          ENDP


                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM4_IRQHandler PROC
;;;484    *******************************************************************************/
;;;485    void TIM4_IRQHandler(void)
000000  4770              BX       lr
;;;486    {
;;;487    }
;;;488    
                          ENDP


                          AREA ||i.TIM5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM5_IRQHandler PROC
;;;722    *******************************************************************************/
;;;723    void TIM5_IRQHandler(void)
000000  4770              BX       lr
;;;724    {
;;;725    }
;;;726    
                          ENDP


                          AREA ||i.TIM6_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM6_IRQHandler PROC
;;;766    *******************************************************************************/
;;;767    void TIM6_IRQHandler(void)
000000  4770              BX       lr
;;;768    {
;;;769    }
;;;770    
                          ENDP


                          AREA ||i.TIM7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM7_IRQHandler PROC
;;;777    *******************************************************************************/
;;;778    void TIM7_IRQHandler(void)
000000  4770              BX       lr
;;;779    {
;;;780    }
;;;781    
                          ENDP


                          AREA ||i.TIM8_BRK_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM8_BRK_IRQHandler PROC
;;;629    *******************************************************************************/
;;;630    void TIM8_BRK_IRQHandler(void)
000000  4770              BX       lr
;;;631    {
;;;632    }
;;;633    
                          ENDP


                          AREA ||i.TIM8_CC_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM8_CC_IRQHandler PROC
;;;664    *******************************************************************************/
;;;665    void TIM8_CC_IRQHandler(void)
000000  4770              BX       lr
;;;666    {
;;;667    }
;;;668    
                          ENDP


                          AREA ||i.TIM8_TRG_COM_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM8_TRG_COM_IRQHandler PROC
;;;653    *******************************************************************************/
;;;654    void TIM8_TRG_COM_IRQHandler(void)
000000  4770              BX       lr
;;;655    {
;;;656    }
;;;657    
                          ENDP


                          AREA ||i.TIM8_UP_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM8_UP_IRQHandler PROC
;;;641    *******************************************************************************/
;;;642    void TIM8_UP_IRQHandler(void)
000000  4770              BX       lr
;;;643    {
;;;644    }
;;;645    
                          ENDP


                          AREA ||i.UART4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART4_IRQHandler PROC
;;;744    *******************************************************************************/
;;;745    void UART4_IRQHandler(void)
000000  4770              BX       lr
;;;746    {
;;;747    }
;;;748    
                          ENDP


                          AREA ||i.UART5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART5_IRQHandler PROC
;;;755    *******************************************************************************/
;;;756    void UART5_IRQHandler(void)
000000  4770              BX       lr
;;;757    {
;;;758    }
;;;759    
                          ENDP


                          AREA ||i.USART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART1_IRQHandler PROC
;;;561    *******************************************************************************/
;;;562    void USART1_IRQHandler(void)
000000  4770              BX       lr
;;;563    {
;;;564    
;;;565    }
;;;566    
                          ENDP


                          AREA ||i.USART2_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART2_IRQHandler PROC
;;;573    *******************************************************************************/
;;;574    void USART2_IRQHandler(void)
000000  4770              BX       lr
;;;575    {
;;;576      
;;;577    }
;;;578    
                          ENDP


                          AREA ||i.USART3_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART3_IRQHandler PROC
;;;585    *******************************************************************************/
;;;586    void USART3_IRQHandler(void)
000000  4770              BX       lr
;;;587    {
;;;588    }
;;;589    
                          ENDP


                          AREA ||i.USBWakeUp_IRQHandler||, CODE, READONLY, ALIGN=1

                  USBWakeUp_IRQHandler PROC
;;;618    *******************************************************************************/
;;;619    void USBWakeUp_IRQHandler(void)
000000  4770              BX       lr
;;;620    {
;;;621    }
;;;622    
                          ENDP


                          AREA ||i.USB_HP_CAN_TX_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_HP_CAN_TX_IRQHandler PROC
;;;360    *******************************************************************************/
;;;361    void USB_HP_CAN_TX_IRQHandler(void)
000000  4770              BX       lr
;;;362    {
;;;363    }
;;;364    
                          ENDP


                          AREA ||i.USB_LP_CAN_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN_RX0_IRQHandler PROC
;;;372    *******************************************************************************/
;;;373    void USB_LP_CAN_RX0_IRQHandler(void)
000000  4770              BX       lr
;;;374    {
;;;375    }
;;;376    
                          ENDP


                          AREA ||i.UsageFaultException||, CODE, READONLY, ALIGN=1

                  UsageFaultException PROC
;;;90     *******************************************************************************/
;;;91     void UsageFaultException(void)
000000  bf00              NOP      
                  |L68.2|
;;;92     {
;;;93       /* Go to infinite loop when Usage Fault exception occurs */
;;;94       while (1)
000002  e7fe              B        |L68.2|
;;;95       {
;;;96       }
;;;97     }
;;;98     
                          ENDP


                          AREA ||i.WWDG_IRQHandler||, CODE, READONLY, ALIGN=1

                  WWDG_IRQHandler PROC
;;;149    *******************************************************************************/
;;;150    void WWDG_IRQHandler(void)
000000  4770              BX       lr
;;;151    {
;;;152    }
;;;153    
                          ENDP

