; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Object\stm32f10x_exti.o --depend=.\Object\stm32f10x_exti.d --feedback=.\Object\stm32-speech-recognition.fed --cpu=Cortex-M3 --apcs=interwork -O0 -Otime -I.\Src\APP -I.\Src\BSP -I.\Src\GUI -I.\Src\CM3_SYS -I.\Src\FATFS -I.\Src\StdPeriph_Driver -I.\Src\StdPeriph_Driver\inc -I.\Src\Speech_Recog -IE:\SoftWare\KEIL\Keil4\path\ARM\INC -IE:\SoftWare\KEIL\Keil4\path\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\Object\stm32f10x_exti.crf Src\StdPeriph_Driver\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;207      */
;;;208    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;209    {
;;;210      /* Check the parameters */
;;;211      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;212      
;;;213      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;214    }
000004  4770              BX       lr
;;;215    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;247      */
;;;248    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;249    {
;;;250      /* Check the parameters */
;;;251      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;252      
;;;253      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;254    }
000004  4770              BX       lr
;;;255    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;83       */
;;;84     void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;85     {
;;;86       EXTI->IMR = 0x00000000;
000002  4907              LDR      r1,|L3.32|
000004  6008              STR      r0,[r1,#0]
;;;87       EXTI->EMR = 0x00000000;
000006  4907              LDR      r1,|L3.36|
000008  f8c10404          STR      r0,[r1,#0x404]
;;;88       EXTI->RTSR = 0x00000000; 
00000c  4906              LDR      r1,|L3.40|
00000e  6008              STR      r0,[r1,#0]
;;;89       EXTI->FTSR = 0x00000000; 
000010  f1010104          ADD      r1,r1,#4
000014  6008              STR      r0,[r1,#0]
;;;90       EXTI->PR = 0x000FFFFF;
000016  4805              LDR      r0,|L3.44|
000018  4905              LDR      r1,|L3.48|
00001a  6008              STR      r0,[r1,#0]
;;;91     }
00001c  4770              BX       lr
;;;92     
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40010400
                  |L3.36|
                          DCD      0x40010000
                  |L3.40|
                          DCD      0x40010408
                  |L3.44|
                          DCD      0x000fffff
                  |L3.48|
                          DCD      0x40010414

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;169      */
;;;170    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4903              LDR      r1,|L4.16|
;;;171    {
;;;172      /* Check the parameters */
;;;173      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;174      
;;;175      EXTI->SWIER |= EXTI_Line;
000002  6809              LDR      r1,[r1,#0]
000004  ea410100          ORR      r1,r1,r0
000008  4a02              LDR      r2,|L4.20|
00000a  f8c21410          STR      r1,[r2,#0x410]
;;;176    }
00000e  4770              BX       lr
;;;177    
                          ENDP

                  |L4.16|
                          DCD      0x40010410
                  |L4.20|
                          DCD      0x40010000

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;184      */
;;;185    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;186    {
;;;187      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;188      /* Check the parameters */
;;;189      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;190      
;;;191      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L5.20|
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d001              BEQ      |L5.16|
;;;192      {
;;;193        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;194      }
;;;195      else
;;;196      {
;;;197        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;198      }
;;;199      return bitstatus;
;;;200    }
000012  4770              BX       lr
;;;201    
                          ENDP

                  |L5.20|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;222      */
;;;223    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;224    {
;;;225      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;226      uint32_t enablestatus = 0;
000004  2200              MOVS     r2,#0
;;;227      /* Check the parameters */
;;;228      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;229      
;;;230      enablestatus =  EXTI->IMR & EXTI_Line;
000006  4b07              LDR      r3,|L6.36|
000008  681b              LDR      r3,[r3,#0]
00000a  ea030201          AND      r2,r3,r1
;;;231      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
00000e  4b06              LDR      r3,|L6.40|
000010  f8d33414          LDR      r3,[r3,#0x414]
000014  420b              TST      r3,r1
000016  d002              BEQ      |L6.30|
000018  b10a              CBZ      r2,|L6.30|
;;;232      {
;;;233        bitstatus = SET;
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L6.32|
                  |L6.30|
;;;234      }
;;;235      else
;;;236      {
;;;237        bitstatus = RESET;
00001e  2000              MOVS     r0,#0
                  |L6.32|
;;;238      }
;;;239      return bitstatus;
;;;240    }
000020  4770              BX       lr
;;;241    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40010400
                  |L6.40|
                          DCD      0x40010000

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;99       */
;;;100    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;101    {
;;;102      uint32_t tmp = 0;
;;;103    
;;;104      /* Check the parameters */
;;;105      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;106      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;107      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;108      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;109    
;;;110      tmp = (uint32_t)EXTI_BASE;
000002  4927              LDR      r1,|L7.160|
;;;111         
;;;112      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7982              LDRB     r2,[r0,#6]
000006  b3da              CBZ      r2,|L7.128|
;;;113      {
;;;114        /* Clear EXTI line configuration */
;;;115        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000008  4a26              LDR      r2,|L7.164|
00000a  f8d22400          LDR      r2,[r2,#0x400]
00000e  6803              LDR      r3,[r0,#0]
000010  439a              BICS     r2,r2,r3
000012  4b24              LDR      r3,|L7.164|
000014  f8c32400          STR      r2,[r3,#0x400]
;;;116        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000018  461a              MOV      r2,r3
00001a  f8d22404          LDR      r2,[r2,#0x404]
00001e  6803              LDR      r3,[r0,#0]
000020  439a              BICS     r2,r2,r3
000022  f1010304          ADD      r3,r1,#4
000026  601a              STR      r2,[r3,#0]
;;;117        
;;;118        tmp += EXTI_InitStruct->EXTI_Mode;
000028  7902              LDRB     r2,[r0,#4]
00002a  4411              ADD      r1,r1,r2
;;;119    
;;;120        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00002c  680a              LDR      r2,[r1,#0]
00002e  6803              LDR      r3,[r0,#0]
000030  ea420203          ORR      r2,r2,r3
000034  600a              STR      r2,[r1,#0]
;;;121    
;;;122        /* Clear Rising Falling edge configuration */
;;;123        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000036  4a1b              LDR      r2,|L7.164|
000038  f8d22408          LDR      r2,[r2,#0x408]
00003c  6803              LDR      r3,[r0,#0]
00003e  ea220203          BIC      r2,r2,r3
000042  4b18              LDR      r3,|L7.164|
000044  f8c32408          STR      r2,[r3,#0x408]
;;;124        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000048  461a              MOV      r2,r3
00004a  f8d2240c          LDR      r2,[r2,#0x40c]
00004e  6803              LDR      r3,[r0,#0]
000050  ea220203          BIC      r2,r2,r3
000054  4b14              LDR      r3,|L7.168|
000056  601a              STR      r2,[r3,#0]
;;;125        
;;;126        /* Select the trigger for the selected external interrupts */
;;;127        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000058  7942              LDRB     r2,[r0,#5]
00005a  2a10              CMP      r2,#0x10
00005c  d111              BNE      |L7.130|
;;;128        {
;;;129          /* Rising Falling edge */
;;;130          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
00005e  4a11              LDR      r2,|L7.164|
000060  f8d22408          LDR      r2,[r2,#0x408]
000064  6803              LDR      r3,[r0,#0]
000066  431a              ORRS     r2,r2,r3
000068  4b0e              LDR      r3,|L7.164|
00006a  f8c32408          STR      r2,[r3,#0x408]
;;;131          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
00006e  461a              MOV      r2,r3
000070  f8d2240c          LDR      r2,[r2,#0x40c]
000074  6803              LDR      r3,[r0,#0]
000076  431a              ORRS     r2,r2,r3
000078  4b0a              LDR      r3,|L7.164|
00007a  f8c3240c          STR      r2,[r3,#0x40c]
00007e  e00e              B        |L7.158|
                  |L7.128|
000080  e007              B        |L7.146|
                  |L7.130|
;;;132        }
;;;133        else
;;;134        {
;;;135          tmp = (uint32_t)EXTI_BASE;
000082  4907              LDR      r1,|L7.160|
;;;136          tmp += EXTI_InitStruct->EXTI_Trigger;
000084  7942              LDRB     r2,[r0,#5]
000086  4411              ADD      r1,r1,r2
;;;137    
;;;138          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000088  680a              LDR      r2,[r1,#0]
00008a  6803              LDR      r3,[r0,#0]
00008c  431a              ORRS     r2,r2,r3
00008e  600a              STR      r2,[r1,#0]
000090  e005              B        |L7.158|
                  |L7.146|
;;;139        }
;;;140      }
;;;141      else
;;;142      {
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
000092  7902              LDRB     r2,[r0,#4]
000094  4411              ADD      r1,r1,r2
;;;144    
;;;145        /* Disable the selected external lines */
;;;146        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
000096  680a              LDR      r2,[r1,#0]
000098  6803              LDR      r3,[r0,#0]
00009a  439a              BICS     r2,r2,r3
00009c  600a              STR      r2,[r1,#0]
                  |L7.158|
;;;147      }
;;;148    }
00009e  4770              BX       lr
;;;149    
                          ENDP

                  |L7.160|
                          DCD      0x40010400
                  |L7.164|
                          DCD      0x40010000
                  |L7.168|
                          DCD      0x4001040c

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;155      */
;;;156    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;157    {
;;;158      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
000002  6001              STR      r1,[r0,#0]
;;;159      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;160      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;161      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;162    }
00000e  4770              BX       lr
;;;163    
                          ENDP

