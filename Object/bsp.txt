; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Object\bsp.o --depend=.\Object\bsp.d --feedback=.\Object\stm32-speech-recognition.fed --cpu=Cortex-M3 --apcs=interwork -O0 -Otime -I.\Src\APP -I.\Src\BSP -I.\Src\GUI -I.\Src\CM3_SYS -I.\Src\FATFS -I.\Src\StdPeriph_Driver -I.\Src\StdPeriph_Driver\inc -I.\Src\Speech_Recog -IE:\SoftWare\KEIL\Keil4\path\ARM\INC -IE:\SoftWare\KEIL\Keil4\path\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\Object\bsp.crf Src\BSP\BSP.c]
                          THUMB

                          AREA ||i.BSP_CPU_ClkFreq||, CODE, READONLY, ALIGN=1

                  BSP_CPU_ClkFreq PROC
;;;80     
;;;81     uint32_t  BSP_CPU_ClkFreq(void) {
000000  b500              PUSH     {lr}
000002  b085              SUB      sp,sp,#0x14
;;;82         RCC_ClocksTypeDef  rcc_clocks;
;;;83     
;;;84         RCC_GetClocksFreq(&rcc_clocks);
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       RCC_GetClocksFreq
;;;85     
;;;86         return ((uint32_t)rcc_clocks.HCLK_Frequency);
00000a  9801              LDR      r0,[sp,#4]
;;;87     }
00000c  b005              ADD      sp,sp,#0x14
00000e  bd00              POP      {pc}
;;;88     
                          ENDP


                          AREA ||i.BSP_Init||, CODE, READONLY, ALIGN=2

                  BSP_Init PROC
;;;63     
;;;64     void BSP_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;65         RCC_Configuration();
000002  f7fffffe          BL       RCC_Configuration
;;;66         
;;;67         GPIO_Configuration();
000006  f7fffffe          BL       GPIO_Configuration
;;;68     
;;;69         USART1_configuration();
00000a  f7fffffe          BL       USART1_configuration
;;;70     
;;;71         DBPLN("start");
00000e  a006              ADR      r0,|L2.40|
000010  f7fffffe          BL       USART1_printf_line
;;;72     
;;;73         spiFlashInit();
000014  f7fffffe          BL       spiFlashInit
;;;74         
;;;75         touchPanelInit();
000018  f7fffffe          BL       touchPanelInit
;;;76         LCD_Init();
00001c  f7fffffe          BL       LCD_Init
;;;77     
;;;78         ADC_DMA_Init();
000020  f7fffffe          BL       ADC_DMA_Init
;;;79     }
000024  bd10              POP      {r4,pc}
;;;80     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
000028  73746172          DCB      "start",0
00002c  7400    
00002e  00                DCB      0
00002f  00                DCB      0

                          AREA ||i.GPIO_Configuration||, CODE, READONLY, ALIGN=2

                  GPIO_Configuration PROC
;;;34       */
;;;35     void GPIO_Configuration(void) {
000000  b508              PUSH     {r3,lr}
;;;36         GPIO_InitTypeDef GPIO_InitStructure;
;;;37     
;;;38         /*  For LED1 LED2   Use */
;;;39         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
000002  20c0              MOVS     r0,#0xc0
000004  f8ad0000          STRH     r0,[sp,#0]
;;;40         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000008  2010              MOVS     r0,#0x10
00000a  f88d0003          STRB     r0,[sp,#3]
;;;41         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000e  2003              MOVS     r0,#3
000010  f88d0002          STRB     r0,[sp,#2]
;;;42         GPIO_Init(GPIOC, &GPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  480b              LDR      r0,|L3.68|
000018  f7fffffe          BL       GPIO_Init
;;;43     
;;;44         /* For LED3, LED4    use */
;;;45         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 | GPIO_Pin_6;
00001c  f44f5001          MOV      r0,#0x2040
000020  f8ad0000          STRH     r0,[sp,#0]
;;;46         GPIO_Init(GPIOD, &GPIO_InitStructure);
000024  4669              MOV      r1,sp
000026  4808              LDR      r0,|L3.72|
000028  f7fffffe          BL       GPIO_Init
;;;47     
;;;48     
;;;49         /* For key use*/
;;;50         GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5;
00002c  203c              MOVS     r0,#0x3c
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;51         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000032  2048              MOVS     r0,#0x48
000034  f88d0003          STRB     r0,[sp,#3]
;;;52         GPIO_Init(GPIOE, &GPIO_InitStructure);
000038  4669              MOV      r1,sp
00003a  4804              LDR      r0,|L3.76|
00003c  f7fffffe          BL       GPIO_Init
;;;53     }
000040  bd08              POP      {r3,pc}
;;;54     
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0x40011000
                  |L3.72|
                          DCD      0x40011400
                  |L3.76|
                          DCD      0x40011800

                          AREA ||i.OS_CPU_SysTickClkFreq||, CODE, READONLY, ALIGN=1

                  OS_CPU_SysTickClkFreq PROC
;;;88     
;;;89     uint32_t  OS_CPU_SysTickClkFreq(void) {
000000  b510              PUSH     {r4,lr}
;;;90         uint32_t  freq;
;;;91         freq = BSP_CPU_ClkFreq();
000002  f7fffffe          BL       BSP_CPU_ClkFreq
000006  4604              MOV      r4,r0
;;;92         return (freq);
000008  4620              MOV      r0,r4
;;;93     }
00000a  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.RCC_Configuration||, CODE, READONLY, ALIGN=1

                  RCC_Configuration PROC
;;;13     
;;;14     void RCC_Configuration(void) {
000000  b510              PUSH     {r4,lr}
;;;15         /* Setup the microcontroller system. Initialize the Embedded Flash Interface,
;;;16          initialize the PLL and update the SystemFrequency variable. */
;;;17         //SystemInit();
;;;18     
;;;19     
;;;20         /* Enable USART1, GPIOA, GPIOx and AFIO …… clocks */
;;;21         RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_SPI1 |
000002  2101              MOVS     r1,#1
000004  f245307d          MOV      r0,#0x537d
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;22                                RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOA |
;;;23                                RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;24                                RCC_APB2Periph_GPIOE | RCC_APB2Periph_GPIOG |
;;;25                                RCC_APB2Periph_AFIO  | RCC_APB2Periph_ADC1, ENABLE);
;;;26     
;;;27         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;28     }
000014  bd10              POP      {r4,pc}
;;;29     
                          ENDP


                          AREA ||i.testFontStorage||, CODE, READONLY, ALIGN=2

                  testFontStorage PROC
;;;54     
;;;55     void testFontStorage(){
000000  b570              PUSH     {r4-r6,lr}
;;;56         const char *cnStr="欢迎使用孤立词语音识别测试系统";
000002  a506              ADR      r5,|L6.28|
;;;57         u8 i;
;;;58         
;;;59         for(i=0; i<15; i++){
000004  2400              MOVS     r4,#0
000006  e005              B        |L6.20|
                  |L6.8|
;;;60             printGB2312Font24Dot(cnStr+i*2);
000008  eb050044          ADD      r0,r5,r4,LSL #1
00000c  f7fffffe          BL       printGB2312Font24Dot
000010  1c60              ADDS     r0,r4,#1              ;59
000012  b2c4              UXTB     r4,r0                 ;59
                  |L6.20|
000014  2c0f              CMP      r4,#0xf               ;59
000016  dbf7              BLT      |L6.8|
;;;61         }
;;;62     }
000018  bd70              POP      {r4-r6,pc}
;;;63     
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
00001c  bbb6d3ad          DCB      187,182,211,173,202,185,211,195,185,194,193,162,180,202,211
000020  cab9d3c3
000024  b9c2c1a2
000028  b4cad3  
00002b  efd2f4ca          DCB      239,210,244,202,182,177,240,178,226,202,212,207,181,205,179
00002f  b6b1f0b2
000033  e2cad4cf
000037  b5cdb3  
00003a  00                DCB      0
00003b  00                DCB      0
