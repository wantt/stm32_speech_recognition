; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Object\dtw.o --depend=.\Object\dtw.d --feedback=.\Object\stm32-speech-recognition.fed --cpu=Cortex-M3 --apcs=interwork -O0 -Otime -I.\Src\APP -I.\Src\BSP -I.\Src\GUI -I.\Src\CM3_SYS -I.\Src\FATFS -I.\Src\StdPeriph_Driver -I.\Src\StdPeriph_Driver\inc -I.\Src\Speech_Recog -IE:\SoftWare\KEIL\Keil4\path\ARM\INC -IE:\SoftWare\KEIL\Keil4\path\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\Object\dtw.crf Src\Speech_Recog\DTW.C]
                          THUMB

                          AREA ||i.dtw||, CODE, READONLY, ALIGN=2

                  ||dtw|| PROC
;;;119    
;;;120    u32 dtw(v_ftr_tag *ftr_in, v_ftr_tag *frt_mdl)
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;121    {
000004  b083              SUB      sp,sp,#0xc
000006  4682              MOV      r10,r0
;;;122    	u32 dis;
;;;123    	u16 x,y;
;;;124    	u16 step;
;;;125    	s16 *in;
;;;126    	s16 *mdl;
;;;127    	u32 up,right,right_up;
;;;128    	u32 min;
;;;129    	
;;;130    	in_frm_num=ftr_in->frm_num;
000008  f8ba0002          LDRH     r0,[r10,#2]
00000c  494d              LDR      r1,|L1.324|
00000e  8008              STRH     r0,[r1,#0]
;;;131    	mdl_frm_num=frt_mdl->frm_num;
000010  9804              LDR      r0,[sp,#0x10]
000012  8840              LDRH     r0,[r0,#2]
000014  494c              LDR      r1,|L1.328|
000016  8008              STRH     r0,[r1,#0]
;;;132    	
;;;133    	if((in_frm_num>(mdl_frm_num*2))||((2*in_frm_num)<mdl_frm_num))
000018  4608              MOV      r0,r1
00001a  8800              LDRH     r0,[r0,#0]  ; mdl_frm_num
00001c  4949              LDR      r1,|L1.324|
00001e  8809              LDRH     r1,[r1,#0]  ; in_frm_num
000020  ebb10f40          CMP      r1,r0,LSL #1
000024  dc06              BGT      |L1.52|
000026  4847              LDR      r0,|L1.324|
000028  8800              LDRH     r0,[r0,#0]  ; in_frm_num
00002a  0040              LSLS     r0,r0,#1
00002c  4946              LDR      r1,|L1.328|
00002e  8809              LDRH     r1,[r1,#0]  ; mdl_frm_num
000030  4288              CMP      r0,r1
000032  da04              BGE      |L1.62|
                  |L1.52|
;;;134    	{
;;;135    		//USART1_printf("in_frm_num=%d mdl_frm_num=%d\r\n", in_frm_num,mdl_frm_num);
;;;136    		return dis_err;
000034  f04f30ff          MOV      r0,#0xffffffff
                  |L1.56|
;;;137    	}
;;;138    	else
;;;139    	{
;;;140    		// 计算约束平行四边形顶点值
;;;141    		X1=(2*mdl_frm_num-in_frm_num)/3;
;;;142    		X2=(4*in_frm_num-2*mdl_frm_num)/3;
;;;143    		in=ftr_in->mfcc_dat;
;;;144    		mdl=frt_mdl->mfcc_dat;
;;;145    
;;;146    		dis=get_dis(in,mdl);
;;;147    		x=1;
;;;148    		y=1; 
;;;149    		step=1;
;;;150    		do
;;;151    		{
;;;152    			up=(dtw_limit(x,y+1)==ins)?get_dis(mdl+mfcc_num,in):dis_err;
;;;153    			right=(dtw_limit(x+1,y)==ins)?get_dis(mdl,in+mfcc_num):dis_err;
;;;154    			right_up=(dtw_limit(x+1,y+1)==ins)?get_dis(mdl+mfcc_num,in+mfcc_num):dis_err;
;;;155    			
;;;156    			min=right_up;
;;;157    			if(min>right)
;;;158    			{
;;;159    				min=right;
;;;160    			}
;;;161    			if(min>up)
;;;162    			{
;;;163    				min=up;
;;;164    			}
;;;165    			
;;;166    			dis+=min;
;;;167    			
;;;168    			if(min==right_up)
;;;169    			{
;;;170    				in+=mfcc_num;
;;;171    				x++;
;;;172    				mdl+=mfcc_num;
;;;173    				y++;
;;;174    			}
;;;175    			else if(min==up)
;;;176    			{
;;;177    				mdl+=mfcc_num;
;;;178    				y++;
;;;179    			}
;;;180    			else
;;;181    			{
;;;182    				in+=mfcc_num;
;;;183    				x++;
;;;184    			}
;;;185    			step++;	
;;;186    			//USART1_printf("x=%d y=%d\r\n",x,y);
;;;187    		} 
;;;188    		while((x<in_frm_num)&&(y<mdl_frm_num));
;;;189    		//USART1_printf("step=%d\r\n",step);
;;;190    	}
;;;191    	return (dis/step); //步长归一化
;;;192    }
000038  b005              ADD      sp,sp,#0x14
00003a  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.62|
00003e  4842              LDR      r0,|L1.328|
000040  8800              LDRH     r0,[r0,#0]            ;141  ; mdl_frm_num
000042  4940              LDR      r1,|L1.324|
000044  8809              LDRH     r1,[r1,#0]            ;141  ; in_frm_num
000046  ebc10040          RSB      r0,r1,r0,LSL #1       ;141
00004a  2103              MOVS     r1,#3                 ;141
00004c  fb90f0f1          SDIV     r0,r0,r1              ;141
000050  493e              LDR      r1,|L1.332|
000052  8008              STRH     r0,[r1,#0]            ;141
000054  483b              LDR      r0,|L1.324|
000056  8800              LDRH     r0,[r0,#0]            ;142  ; in_frm_num
000058  0080              LSLS     r0,r0,#2              ;142
00005a  493b              LDR      r1,|L1.328|
00005c  8809              LDRH     r1,[r1,#0]            ;142  ; mdl_frm_num
00005e  2202              MOVS     r2,#2                 ;142
000060  fb020011          MLS      r0,r2,r1,r0           ;142
000064  2103              MOVS     r1,#3                 ;142
000066  fb90f0f1          SDIV     r0,r0,r1              ;142
00006a  4939              LDR      r1,|L1.336|
00006c  8008              STRH     r0,[r1,#0]            ;142
00006e  f10a0604          ADD      r6,r10,#4             ;143
000072  9804              LDR      r0,[sp,#0x10]         ;144
000074  1d07              ADDS     r7,r0,#4              ;144
000076  4639              MOV      r1,r7                 ;146
000078  4630              MOV      r0,r6                 ;146
00007a  f7fffffe          BL       get_dis
00007e  4681              MOV      r9,r0                 ;146
000080  2401              MOVS     r4,#1                 ;147
000082  2501              MOVS     r5,#1                 ;148
000084  2001              MOVS     r0,#1                 ;149
000086  9002              STR      r0,[sp,#8]            ;149
000088  bf00              NOP                            ;150
                  |L1.138|
00008a  1c68              ADDS     r0,r5,#1              ;152
00008c  b281              UXTH     r1,r0                 ;152
00008e  4620              MOV      r0,r4                 ;152
000090  f7fffffe          BL       dtw_limit
000094  b928              CBNZ     r0,|L1.162|
000096  4631              MOV      r1,r6                 ;152
000098  f1070018          ADD      r0,r7,#0x18           ;152
00009c  f7fffffe          BL       get_dis
0000a0  e001              B        |L1.166|
                  |L1.162|
0000a2  f04f30ff          MOV      r0,#0xffffffff        ;152
                  |L1.166|
0000a6  4683              MOV      r11,r0                ;152
0000a8  4629              MOV      r1,r5                 ;153
0000aa  1c60              ADDS     r0,r4,#1              ;153
0000ac  b280              UXTH     r0,r0                 ;153
0000ae  f7fffffe          BL       dtw_limit
0000b2  b928              CBNZ     r0,|L1.192|
0000b4  f1060118          ADD      r1,r6,#0x18           ;153
0000b8  4638              MOV      r0,r7                 ;153
0000ba  f7fffffe          BL       get_dis
0000be  e001              B        |L1.196|
                  |L1.192|
0000c0  f04f30ff          MOV      r0,#0xffffffff        ;153
                  |L1.196|
0000c4  9001              STR      r0,[sp,#4]            ;153
0000c6  1c68              ADDS     r0,r5,#1              ;154
0000c8  b281              UXTH     r1,r0                 ;154
0000ca  1c60              ADDS     r0,r4,#1              ;154
0000cc  b280              UXTH     r0,r0                 ;154
0000ce  f7fffffe          BL       dtw_limit
0000d2  b930              CBNZ     r0,|L1.226|
0000d4  f1060118          ADD      r1,r6,#0x18           ;154
0000d8  f1070018          ADD      r0,r7,#0x18           ;154
0000dc  f7fffffe          BL       get_dis
0000e0  e001              B        |L1.230|
                  |L1.226|
0000e2  f04f30ff          MOV      r0,#0xffffffff        ;154
                  |L1.230|
0000e6  9000              STR      r0,[sp,#0]            ;154
0000e8  f8dd8000          LDR      r8,[sp,#0]            ;156
0000ec  9801              LDR      r0,[sp,#4]            ;157
0000ee  4580              CMP      r8,r0                 ;157
0000f0  d901              BLS      |L1.246|
0000f2  f8dd8004          LDR      r8,[sp,#4]            ;159
                  |L1.246|
0000f6  45d8              CMP      r8,r11                ;161
0000f8  d900              BLS      |L1.252|
0000fa  46d8              MOV      r8,r11                ;163
                  |L1.252|
0000fc  44c1              ADD      r9,r9,r8              ;166
0000fe  9800              LDR      r0,[sp,#0]            ;168
000100  4580              CMP      r8,r0                 ;168
000102  d106              BNE      |L1.274|
000104  3618              ADDS     r6,r6,#0x18           ;170
000106  1c60              ADDS     r0,r4,#1              ;171
000108  b284              UXTH     r4,r0                 ;171
00010a  3718              ADDS     r7,r7,#0x18           ;172
00010c  1c68              ADDS     r0,r5,#1              ;173
00010e  b285              UXTH     r5,r0                 ;173
000110  e008              B        |L1.292|
                  |L1.274|
000112  45d8              CMP      r8,r11                ;175
000114  d103              BNE      |L1.286|
000116  3718              ADDS     r7,r7,#0x18           ;177
000118  1c68              ADDS     r0,r5,#1              ;178
00011a  b285              UXTH     r5,r0                 ;178
00011c  e002              B        |L1.292|
                  |L1.286|
00011e  3618              ADDS     r6,r6,#0x18           ;182
000120  1c60              ADDS     r0,r4,#1              ;183
000122  b284              UXTH     r4,r0                 ;183
                  |L1.292|
000124  9802              LDR      r0,[sp,#8]            ;185
000126  1c40              ADDS     r0,r0,#1              ;185
000128  b280              UXTH     r0,r0                 ;185
00012a  9002              STR      r0,[sp,#8]            ;185
00012c  4805              LDR      r0,|L1.324|
00012e  8800              LDRH     r0,[r0,#0]            ;188  ; in_frm_num
000130  4284              CMP      r4,r0                 ;188
000132  da03              BGE      |L1.316|
000134  4804              LDR      r0,|L1.328|
000136  8800              LDRH     r0,[r0,#0]            ;188  ; mdl_frm_num
000138  4285              CMP      r5,r0                 ;188
00013a  dba6              BLT      |L1.138|
                  |L1.316|
00013c  9802              LDR      r0,[sp,#8]            ;191
00013e  fbb9f0f0          UDIV     r0,r9,r0              ;191
000142  e779              B        |L1.56|
;;;193    
                          ENDP

                  |L1.324|
                          DCD      in_frm_num
                  |L1.328|
                          DCD      mdl_frm_num
                  |L1.332|
                          DCD      ||X1||
                  |L1.336|
                          DCD      ||X2||

                          AREA ||i.dtw_limit||, CODE, READONLY, ALIGN=2

                  dtw_limit PROC
;;;75     */
;;;76     u8 dtw_limit(u16 x, u16 y)
000000  b510              PUSH     {r4,lr}
;;;77     {
000002  4602              MOV      r2,r0
;;;78     	if(x<X1)
000004  4819              LDR      r0,|L2.108|
000006  8800              LDRH     r0,[r0,#0]  ; X1
000008  4282              CMP      r2,r0
00000a  da05              BGE      |L2.24|
;;;79     	{
;;;80     		if(y>=((2*x)+2))
00000c  0050              LSLS     r0,r2,#1
00000e  1c80              ADDS     r0,r0,#2
000010  4288              CMP      r0,r1
000012  dc10              BGT      |L2.54|
;;;81     		{
;;;82     			return outs;
000014  2001              MOVS     r0,#1
                  |L2.22|
;;;83     		}
;;;84     	}
;;;85     	else
;;;86     	{
;;;87     		if((2*y+in_frm_num-2*mdl_frm_num)>=(x+4))
;;;88     		{
;;;89     			return outs;
;;;90     		}
;;;91     	}
;;;92     	
;;;93     	if(x<X2)
;;;94     	{
;;;95     		if((2*y+2)<=x)
;;;96     		{
;;;97     			return outs;
;;;98     		}
;;;99     	}
;;;100    	else
;;;101    	{
;;;102    		if((y+4)<=(2*x+mdl_frm_num-2*in_frm_num))
;;;103    		{
;;;104    			return outs;
;;;105    		}
;;;106    	}
;;;107    	
;;;108    	return ins;
;;;109    }
000016  bd10              POP      {r4,pc}
                  |L2.24|
000018  4815              LDR      r0,|L2.112|
00001a  8800              LDRH     r0,[r0,#0]            ;87  ; in_frm_num
00001c  2302              MOVS     r3,#2                 ;87
00001e  fb030001          MLA      r0,r3,r1,r0           ;87
000022  4b14              LDR      r3,|L2.116|
000024  881b              LDRH     r3,[r3,#0]            ;87  ; mdl_frm_num
000026  2402              MOVS     r4,#2                 ;87
000028  fb040313          MLS      r3,r4,r3,r0           ;87
00002c  1d10              ADDS     r0,r2,#4              ;87
00002e  4283              CMP      r3,r0                 ;87
000030  db01              BLT      |L2.54|
000032  2001              MOVS     r0,#1                 ;89
000034  e7ef              B        |L2.22|
                  |L2.54|
000036  4810              LDR      r0,|L2.120|
000038  8800              LDRH     r0,[r0,#0]            ;93  ; X2
00003a  4282              CMP      r2,r0                 ;93
00003c  da05              BGE      |L2.74|
00003e  0048              LSLS     r0,r1,#1              ;95
000040  1c80              ADDS     r0,r0,#2              ;95
000042  4290              CMP      r0,r2                 ;95
000044  dc10              BGT      |L2.104|
000046  2001              MOVS     r0,#1                 ;97
000048  e7e5              B        |L2.22|
                  |L2.74|
00004a  480a              LDR      r0,|L2.116|
00004c  8800              LDRH     r0,[r0,#0]            ;102  ; mdl_frm_num
00004e  2302              MOVS     r3,#2                 ;102
000050  fb030002          MLA      r0,r3,r2,r0           ;102
000054  4b06              LDR      r3,|L2.112|
000056  881b              LDRH     r3,[r3,#0]            ;102  ; in_frm_num
000058  2402              MOVS     r4,#2                 ;102
00005a  fb040313          MLS      r3,r4,r3,r0           ;102
00005e  1d08              ADDS     r0,r1,#4              ;102
000060  4283              CMP      r3,r0                 ;102
000062  db01              BLT      |L2.104|
000064  2001              MOVS     r0,#1                 ;104
000066  e7d6              B        |L2.22|
                  |L2.104|
000068  2000              MOVS     r0,#0                 ;108
00006a  e7d4              B        |L2.22|
;;;110    
                          ENDP

                  |L2.108|
                          DCD      ||X1||
                  |L2.112|
                          DCD      in_frm_num
                  |L2.116|
                          DCD      mdl_frm_num
                  |L2.120|
                          DCD      ||X2||

                          AREA ||i.get_dis||, CODE, READONLY, ALIGN=1

                  get_dis PROC
;;;44     */
;;;45     u32 get_dis(s16 *frm_ftr1, s16 *frm_ftr2)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;46     {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;47     	u8 	i;
;;;48     	u32	dis;
;;;49     	s32 dif;	//两矢量相同维度上的差值
;;;50     	
;;;51     	dis=0;
000008  f04f0800          MOV      r8,#0
;;;52     	for(i=0;i<mfcc_num;i++)
00000c  2400              MOVS     r4,#0
00000e  e008              B        |L3.34|
                  |L3.16|
;;;53     	{
;;;54     		//USART1_printf("dis=%d ",dis);
;;;55     		dif=frm_ftr1[i]-frm_ftr2[i];
000010  f9360014          LDRSH    r0,[r6,r4,LSL #1]
000014  f9371014          LDRSH    r1,[r7,r4,LSL #1]
000018  1a45              SUBS     r5,r0,r1
;;;56     		dis+=(dif*dif);
00001a  fb058805          MLA      r8,r5,r5,r8
00001e  1c60              ADDS     r0,r4,#1              ;52
000020  b2c4              UXTB     r4,r0                 ;52
                  |L3.34|
000022  2c0c              CMP      r4,#0xc               ;52
000024  dbf4              BLT      |L3.16|
;;;57     	}
;;;58     	//USART1_printf("dis=%d ",dis);
;;;59     	dis=sqrtf(dis);
000026  4640              MOV      r0,r8
000028  f7fffffe          BL       __aeabi_ui2f
00002c  4682              MOV      r10,r0
00002e  f7fffffe          BL       sqrtf
000032  4681              MOV      r9,r0
000034  f7fffffe          BL       __aeabi_f2uiz
000038  4680              MOV      r8,r0
;;;60     	//USART1_printf("%d\r\n",dis);
;;;61     	return dis;
00003a  4640              MOV      r0,r8
;;;62     }
00003c  e8bd87f0          POP      {r4-r10,pc}
;;;63     
                          ENDP


                          AREA ||i.get_mdl||, CODE, READONLY, ALIGN=2

                  get_mdl PROC
;;;216    
;;;217    u32 get_mdl(v_ftr_tag *ftr_in1, v_ftr_tag *ftr_in2, v_ftr_tag *ftr_mdl)
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;218    {
000004  b084              SUB      sp,sp,#0x10
000006  4682              MOV      r10,r0
;;;219    	u32 dis;
;;;220    	u16 x,y;
;;;221    	u16 step;
;;;222    	s16 *in1;
;;;223    	s16 *in2;
;;;224    	s16 *mdl;
;;;225    	u32 up,right,right_up;
;;;226    	u32 min;
;;;227    	
;;;228    	in_frm_num=ftr_in1->frm_num;
000008  f8ba0002          LDRH     r0,[r10,#2]
00000c  495c              LDR      r1,|L4.384|
00000e  8008              STRH     r0,[r1,#0]
;;;229    	mdl_frm_num=ftr_in2->frm_num;
000010  9805              LDR      r0,[sp,#0x14]
000012  8840              LDRH     r0,[r0,#2]
000014  495b              LDR      r1,|L4.388|
000016  8008              STRH     r0,[r1,#0]
;;;230    	
;;;231    	if((in_frm_num>(mdl_frm_num*2))||((2*in_frm_num)<mdl_frm_num))
000018  4608              MOV      r0,r1
00001a  8800              LDRH     r0,[r0,#0]  ; mdl_frm_num
00001c  4958              LDR      r1,|L4.384|
00001e  8809              LDRH     r1,[r1,#0]  ; in_frm_num
000020  ebb10f40          CMP      r1,r0,LSL #1
000024  dc06              BGT      |L4.52|
000026  4856              LDR      r0,|L4.384|
000028  8800              LDRH     r0,[r0,#0]  ; in_frm_num
00002a  0040              LSLS     r0,r0,#1
00002c  4955              LDR      r1,|L4.388|
00002e  8809              LDRH     r1,[r1,#0]  ; mdl_frm_num
000030  4288              CMP      r0,r1
000032  da04              BGE      |L4.62|
                  |L4.52|
;;;232    	{
;;;233    		return dis_err;
000034  f04f30ff          MOV      r0,#0xffffffff
                  |L4.56|
;;;234    	}
;;;235    	else
;;;236    	{
;;;237    		// 计算约束平行四边形顶点值
;;;238    		X1=(2*mdl_frm_num-in_frm_num)/3;
;;;239    		X2=(4*in_frm_num-2*mdl_frm_num)/3;
;;;240    		in1=ftr_in1->mfcc_dat;
;;;241    		in2=ftr_in2->mfcc_dat;
;;;242    		mdl=ftr_mdl->mfcc_dat;
;;;243    
;;;244    		dis=get_dis(in1,in2);
;;;245    		get_mean(in1, in2, mdl);
;;;246    		x=1;
;;;247    		y=1; 
;;;248    		step=1;
;;;249    		do
;;;250    		{
;;;251    			up=(dtw_limit(x,y+1)==ins)?get_dis(in2+mfcc_num,in1):dis_err;
;;;252    			right=(dtw_limit(x+1,y)==ins)?get_dis(in2,in1+mfcc_num):dis_err;
;;;253    			right_up=(dtw_limit(x+1,y+1)==ins)?get_dis(in2+mfcc_num,in1+mfcc_num):dis_err;
;;;254    			
;;;255    			min=right_up;
;;;256    			if(min>right)
;;;257    			{
;;;258    				min=right;
;;;259    			}
;;;260    			if(min>up)
;;;261    			{
;;;262    				min=up;
;;;263    			}
;;;264    			
;;;265    			dis+=min;
;;;266    			
;;;267    			if(min==right_up)
;;;268    			{
;;;269    				in1+=mfcc_num;
;;;270    				x++;
;;;271    				in2+=mfcc_num;
;;;272    				y++;
;;;273    			}
;;;274    			else if(min==up)
;;;275    			{
;;;276    				in2+=mfcc_num;
;;;277    				y++;
;;;278    			}
;;;279    			else
;;;280    			{
;;;281    				in1+=mfcc_num;
;;;282    				x++;
;;;283    			}
;;;284    			step++;	
;;;285    			
;;;286    			mdl+=mfcc_num;
;;;287    			get_mean(in1, in2, mdl);
;;;288    			
;;;289    			USART1_printf("x=%d y=%d\r\n",x,y);
;;;290    		}
;;;291    		while((x<in_frm_num)&&(y<mdl_frm_num));
;;;292    		USART1_printf("step=%d\r\n",step);
;;;293    		ftr_mdl->frm_num=step;
;;;294    	}
;;;295    	return (dis/step); //步长归一化
;;;296    }
000038  b007              ADD      sp,sp,#0x1c
00003a  e8bd8ff0          POP      {r4-r11,pc}
                  |L4.62|
00003e  4851              LDR      r0,|L4.388|
000040  8800              LDRH     r0,[r0,#0]            ;238  ; mdl_frm_num
000042  494f              LDR      r1,|L4.384|
000044  8809              LDRH     r1,[r1,#0]            ;238  ; in_frm_num
000046  ebc10040          RSB      r0,r1,r0,LSL #1       ;238
00004a  2103              MOVS     r1,#3                 ;238
00004c  fb90f0f1          SDIV     r0,r0,r1              ;238
000050  494d              LDR      r1,|L4.392|
000052  8008              STRH     r0,[r1,#0]            ;238
000054  484a              LDR      r0,|L4.384|
000056  8800              LDRH     r0,[r0,#0]            ;239  ; in_frm_num
000058  0080              LSLS     r0,r0,#2              ;239
00005a  494a              LDR      r1,|L4.388|
00005c  8809              LDRH     r1,[r1,#0]            ;239  ; mdl_frm_num
00005e  2202              MOVS     r2,#2                 ;239
000060  fb020011          MLS      r0,r2,r1,r0           ;239
000064  2103              MOVS     r1,#3                 ;239
000066  fb90f0f1          SDIV     r0,r0,r1              ;239
00006a  4948              LDR      r1,|L4.396|
00006c  8008              STRH     r0,[r1,#0]            ;239
00006e  f10a0604          ADD      r6,r10,#4             ;240
000072  9805              LDR      r0,[sp,#0x14]         ;241
000074  1d07              ADDS     r7,r0,#4              ;241
000076  9806              LDR      r0,[sp,#0x18]         ;242
000078  1d00              ADDS     r0,r0,#4              ;242
00007a  9002              STR      r0,[sp,#8]            ;242
00007c  4639              MOV      r1,r7                 ;244
00007e  4630              MOV      r0,r6                 ;244
000080  f7fffffe          BL       get_dis
000084  9003              STR      r0,[sp,#0xc]          ;244
000086  4639              MOV      r1,r7                 ;245
000088  4630              MOV      r0,r6                 ;245
00008a  9a02              LDR      r2,[sp,#8]            ;245
00008c  f7fffffe          BL       get_mean
000090  2401              MOVS     r4,#1                 ;246
000092  2501              MOVS     r5,#1                 ;247
000094  46a0              MOV      r8,r4                 ;248
000096  bf00              NOP                            ;249
                  |L4.152|
000098  1c68              ADDS     r0,r5,#1              ;251
00009a  b281              UXTH     r1,r0                 ;251
00009c  4620              MOV      r0,r4                 ;251
00009e  f7fffffe          BL       dtw_limit
0000a2  b928              CBNZ     r0,|L4.176|
0000a4  4631              MOV      r1,r6                 ;251
0000a6  f1070018          ADD      r0,r7,#0x18           ;251
0000aa  f7fffffe          BL       get_dis
0000ae  e001              B        |L4.180|
                  |L4.176|
0000b0  f04f30ff          MOV      r0,#0xffffffff        ;251
                  |L4.180|
0000b4  4683              MOV      r11,r0                ;251
0000b6  4629              MOV      r1,r5                 ;252
0000b8  1c60              ADDS     r0,r4,#1              ;252
0000ba  b280              UXTH     r0,r0                 ;252
0000bc  f7fffffe          BL       dtw_limit
0000c0  b928              CBNZ     r0,|L4.206|
0000c2  f1060118          ADD      r1,r6,#0x18           ;252
0000c6  4638              MOV      r0,r7                 ;252
0000c8  f7fffffe          BL       get_dis
0000cc  e001              B        |L4.210|
                  |L4.206|
0000ce  f04f30ff          MOV      r0,#0xffffffff        ;252
                  |L4.210|
0000d2  9001              STR      r0,[sp,#4]            ;252
0000d4  1c68              ADDS     r0,r5,#1              ;253
0000d6  b281              UXTH     r1,r0                 ;253
0000d8  1c60              ADDS     r0,r4,#1              ;253
0000da  b280              UXTH     r0,r0                 ;253
0000dc  f7fffffe          BL       dtw_limit
0000e0  b930              CBNZ     r0,|L4.240|
0000e2  f1060118          ADD      r1,r6,#0x18           ;253
0000e6  f1070018          ADD      r0,r7,#0x18           ;253
0000ea  f7fffffe          BL       get_dis
0000ee  e001              B        |L4.244|
                  |L4.240|
0000f0  f04f30ff          MOV      r0,#0xffffffff        ;253
                  |L4.244|
0000f4  9000              STR      r0,[sp,#0]            ;253
0000f6  f8dd9000          LDR      r9,[sp,#0]            ;255
0000fa  9801              LDR      r0,[sp,#4]            ;256
0000fc  4581              CMP      r9,r0                 ;256
0000fe  d901              BLS      |L4.260|
000100  f8dd9004          LDR      r9,[sp,#4]            ;258
                  |L4.260|
000104  45d9              CMP      r9,r11                ;260
000106  d900              BLS      |L4.266|
000108  46d9              MOV      r9,r11                ;262
                  |L4.266|
00010a  9803              LDR      r0,[sp,#0xc]          ;265
00010c  4448              ADD      r0,r0,r9              ;265
00010e  9003              STR      r0,[sp,#0xc]          ;265
000110  9800              LDR      r0,[sp,#0]            ;267
000112  4581              CMP      r9,r0                 ;267
000114  d106              BNE      |L4.292|
000116  3618              ADDS     r6,r6,#0x18           ;269
000118  1c60              ADDS     r0,r4,#1              ;270
00011a  b284              UXTH     r4,r0                 ;270
00011c  3718              ADDS     r7,r7,#0x18           ;271
00011e  1c68              ADDS     r0,r5,#1              ;272
000120  b285              UXTH     r5,r0                 ;272
000122  e008              B        |L4.310|
                  |L4.292|
000124  45d9              CMP      r9,r11                ;274
000126  d103              BNE      |L4.304|
000128  3718              ADDS     r7,r7,#0x18           ;276
00012a  1c68              ADDS     r0,r5,#1              ;277
00012c  b285              UXTH     r5,r0                 ;277
00012e  e002              B        |L4.310|
                  |L4.304|
000130  3618              ADDS     r6,r6,#0x18           ;281
000132  1c60              ADDS     r0,r4,#1              ;282
000134  b284              UXTH     r4,r0                 ;282
                  |L4.310|
000136  f1080001          ADD      r0,r8,#1              ;284
00013a  fa1ff880          UXTH     r8,r0                 ;284
00013e  9802              LDR      r0,[sp,#8]            ;286
000140  3018              ADDS     r0,r0,#0x18           ;286
000142  9002              STR      r0,[sp,#8]            ;286
000144  4639              MOV      r1,r7                 ;287
000146  4630              MOV      r0,r6                 ;287
000148  9a02              LDR      r2,[sp,#8]            ;287
00014a  f7fffffe          BL       get_mean
00014e  462a              MOV      r2,r5                 ;289
000150  4621              MOV      r1,r4                 ;289
000152  a00f              ADR      r0,|L4.400|
000154  f7fffffe          BL       USART1_printf
000158  4809              LDR      r0,|L4.384|
00015a  8800              LDRH     r0,[r0,#0]            ;291  ; in_frm_num
00015c  4284              CMP      r4,r0                 ;291
00015e  da03              BGE      |L4.360|
000160  4808              LDR      r0,|L4.388|
000162  8800              LDRH     r0,[r0,#0]            ;291  ; mdl_frm_num
000164  4285              CMP      r5,r0                 ;291
000166  db97              BLT      |L4.152|
                  |L4.360|
000168  4641              MOV      r1,r8                 ;292
00016a  a00c              ADR      r0,|L4.412|
00016c  f7fffffe          BL       USART1_printf
000170  9806              LDR      r0,[sp,#0x18]         ;293
000172  f8a08002          STRH     r8,[r0,#2]            ;293
000176  9803              LDR      r0,[sp,#0xc]          ;295
000178  fbb0f0f8          UDIV     r0,r0,r8              ;295
00017c  e75c              B        |L4.56|
;;;297    
                          ENDP

00017e  0000              DCW      0x0000
                  |L4.384|
                          DCD      in_frm_num
                  |L4.388|
                          DCD      mdl_frm_num
                  |L4.392|
                          DCD      ||X1||
                  |L4.396|
                          DCD      ||X2||
                  |L4.400|
000190  783d2564          DCB      "x=%d y=%d\r\n",0
000194  20793d25
000198  640d0a00
                  |L4.412|
00019c  73746570          DCB      "step=%d\r\n",0
0001a0  3d25640d
0001a4  0a00    
0001a6  00                DCB      0
0001a7  00                DCB      0

                          AREA ||i.get_mean||, CODE, READONLY, ALIGN=2

                  get_mean PROC
;;;194    
;;;195    void get_mean(s16 *frm_ftr1, s16 *frm_ftr2, s16 *mean)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;196    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;197    	u8 	i;
;;;198    
;;;199    	for(i=0;i<mfcc_num;i++)
00000a  2400              MOVS     r4,#0
00000c  e018              B        |L5.64|
                  |L5.14|
;;;200    	{
;;;201    		mean[i]=(frm_ftr1[i]+frm_ftr2[i])/2;
00000e  f9351014          LDRSH    r1,[r5,r4,LSL #1]
000012  f9362014          LDRSH    r2,[r6,r4,LSL #1]
000016  1888              ADDS     r0,r1,r2
000018  eb0071d0          ADD      r1,r0,r0,LSR #31
00001c  1049              ASRS     r1,r1,#1
00001e  b209              SXTH     r1,r1
000020  f8271014          STRH     r1,[r7,r4,LSL #1]
;;;202    		USART1_printf("x=%d y=%d ",frm_ftr1[i],frm_ftr2[i]);
000024  f9362014          LDRSH    r2,[r6,r4,LSL #1]
000028  f9351014          LDRSH    r1,[r5,r4,LSL #1]
00002c  a006              ADR      r0,|L5.72|
00002e  f7fffffe          BL       USART1_printf
;;;203    		USART1_printf("mean=%d\r\n",mean[i]);
000032  f9371014          LDRSH    r1,[r7,r4,LSL #1]
000036  a007              ADR      r0,|L5.84|
000038  f7fffffe          BL       USART1_printf
00003c  1c60              ADDS     r0,r4,#1              ;199
00003e  b2c4              UXTB     r4,r0                 ;199
                  |L5.64|
000040  2c0c              CMP      r4,#0xc               ;199
000042  dbe4              BLT      |L5.14|
;;;204    	}
;;;205    }
000044  e8bd81f0          POP      {r4-r8,pc}
;;;206    
                          ENDP

                  |L5.72|
000048  783d2564          DCB      "x=%d y=%d ",0
00004c  20793d25
000050  642000  
000053  00                DCB      0
                  |L5.84|
000054  6d65616e          DCB      "mean=%d\r\n",0
000058  3d25640d
00005c  0a00    
00005e  00                DCB      0
00005f  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=1

                  ||X1||
000000  0000              DCB      0x00,0x00
                  ||X2||
000002  0000              DCB      0x00,0x00
                  in_frm_num
000004  0000              DCB      0x00,0x00
                  mdl_frm_num
000006  0000              DCB      0x00,0x00
